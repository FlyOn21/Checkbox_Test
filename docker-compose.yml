version: "3.7"
services:

  checkbox:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: checkboxApi
    image: checkboxapi:0.1.0
    hostname: fastapi
    ports:
      - ${FASTAPI_INGRESS_PORT}:${FASTAPI_PORT}
    expose:
      - 80
    networks:
      - app_infrastructure
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    depends_on:
      - pgadmin
      - dbpsql

  dbpsql:
    image: postgres:13.14-bullseye
    container_name: postgres_db_checks
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    restart: always
    hostname: ${POSTGRES_HOST}
    networks:
      - app_infrastructure
    ports:
      - ${POSTGRES_INGRESS_PORT}:${POSTGRES_PORT}
    volumes:
      - "/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock"
      - postgres_data_prod:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pg4_admin_checks
    restart: unless-stopped
    hostname: ${PGADMIN_HOST_NAME}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_INGRESS_PORT}:${PGADMIN_CONTAINER_PORT}
    depends_on:
      - dbpsql
    networks:
      - app_infrastructure

  redis:
    image: redis:latest
    container_name: redis_cache_checks
    restart: always
    hostname: ${REDIS_HOST_NAME}
    environment:
      RI_APP_PORT: ${REDIS_PORT}
      RI_APP_HOST: ${REDIS_HOST}
      RI_ENCRYPTION_KEY: ${REDIS_ENCRYPTION_KEY}
      RI_LOG_LEVEL: ${REDIS_LOG_LEVEL}
    networks:
      - app_infrastructure
    ports:
      - ${REDIS_INGRESS_PORT}:${REDIS_PORT}
    volumes:
      - cache:/data

networks:
  app_infrastructure:

volumes:
  postgres_data_prod:
    name: postgres_data_prod
  templates_nginx:
    name: templates_nginx
  cache:
    name: redis_cache